{"version":3,"sources":["components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/ContactForm/ContactForm.module.scss","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","components/Notiflix/notiflix-options.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","Container","children","className","s","container","INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","nextProps","nextState","this","form","field","label","input","type","pattern","title","required","onChange","button","Component","Filter","ContactList","contacts","deleteContact","list","map","id","item","onClick","App","filter","newContact","find","Report","warning","addContact","nanoid","contactId","contact","changeFilter","filterContacts","normalizedFilter","toLowerCase","trim","includes","storedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","currentContacts","setItem","stringify","visibleContacts","Notiflix","init","width","backgroundColor","borderRadius","backOverlay","backOverlayColor","fontFamily","svgSize","plainText","titleFontSize","messageFontSize","buttonFontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","svgColor","titleColor","messageColor","buttonBackground","buttonColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,wB,mBCAtFD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,MAAQ,6B,qLCChKC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,+BCC1BI,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAGJC,E,4MAKJC,M,eAAaJ,G,EAMbK,aAAe,YAAkC,IAAD,IAA9BC,OAAUL,EAAoB,EAApBA,KAAMM,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKU,S,EAGPA,MAAQ,WACN,EAAKN,SAAL,eAAmBR,K,2DAhBrB,SAAsBe,EAAWC,GAC/B,OAAOA,IAAcC,KAAKb,Q,oBAkB5B,WACE,MAAyBa,KAAKb,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAML,UAAWC,IAAEoB,KAAML,SAAUI,KAAKR,aAAxC,UACE,wBAAOZ,UAAWC,IAAEqB,MAApB,UACE,sBAAMtB,UAAWC,IAAEsB,MAAnB,kBACA,uBACEvB,UAAWC,IAAEuB,MACbC,KAAK,OACLrB,KAAK,OACLM,MAAON,EACPsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUT,KAAKZ,kBAInB,wBAAOR,UAAWC,IAAEqB,MAApB,UACE,sBAAMtB,UAAWC,IAAEsB,MAAnB,oBACA,uBACEvB,UAAWC,IAAEuB,MACbC,KAAK,MACLrB,KAAK,SACLM,MAAOL,EACPqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUT,KAAKZ,kBAGnB,wBAAQR,UAAWC,IAAE6B,OAAQL,KAAK,SAAlC,gC,GA1DkBM,a,iBCNpBC,EAAS,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAOmB,EAAV,EAAUA,SAAV,OACb,wBAAO7B,UAAWC,IAAEqB,MAApB,UACE,sBAAMtB,UAAWC,IAAEsB,MAAnB,mCACA,uBACEvB,UAAWC,IAAEuB,MACbC,KAAK,OACLrB,KAAK,SACLM,MAAOA,EACPmB,SAAUA,Q,gBCPVI,E,4JAQJ,WACE,MAAoCb,KAAKL,MAAjCmB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,cAElB,OACE,oBAAInC,UAAWC,IAAEmC,KAAjB,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIlC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIL,UAAWC,IAAEsC,KAAjB,UACE,mBAAGvC,UAAWC,IAAEG,KAAhB,SAAuBA,IACvB,mBAAGJ,UAAWC,IAAEI,OAAhB,SAAyBA,IAEzB,wBACEL,UAAWC,IAAE6B,OACbL,KAAK,SACLe,QAAS,kBAAML,EAAcG,IAH/B,iBAJ0BA,Y,GAdZP,aCIpBU,E,4MACJlC,MAAQ,CACN2B,SAAU,GACVQ,OAAQ,I,EAgBV9B,aAAe,SAAA+B,GACb,EAAKpC,MAAM2B,SAASU,MAAK,qBAAGxC,OAAoBuC,EAAWvC,QACvDyC,SAAOC,QAAP,oCAEKH,EAAWvC,KAFhB,4BAGE,MAEF,EAAK2C,WAAWJ,I,EAGtBI,WAAa,YAAuB,IAApB3C,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpB,EAAKM,UAAS,gBAAGuB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAE,CAAEI,GAAIU,YAAO,GAAI5C,OAAMC,WAA1B,mBAAuC6B,S,EAInDC,cAAgB,SAAAc,GACd,EAAKtC,UAAS,kBAAmB,CAC/BuB,SADY,EAAGA,SACIQ,QAAO,SAAAQ,GAAO,OAAIA,EAAQZ,KAAOW,U,EAIxDE,aAAe,YAA4B,IAAfzC,EAAc,EAAxBD,OAAUC,MAC1B,EAAKC,SAAS,CAAE+B,OAAQhC,K,EAG1B0C,eAAiB,WACf,MAA6B,EAAK7C,MAA1BmC,EAAR,EAAQA,OAAQR,EAAhB,EAAgBA,SACVmB,EAAmBX,EAAOY,cAAcC,OAE9C,OAAOrB,EAASQ,QAAO,qBAAGtC,KACnBkD,cAAcE,SAASH,O,uDA5ChC,WACE,IAAMI,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAEvDJ,GAAkBrC,KAAKT,SAAS,CAAEuB,SAAUuB,M,gCAG9C,SAAmBK,EAAWC,GAC5B,IAAMC,EAAkB5C,KAAKb,MAAM2B,SAEnC8B,IAAoBD,EAAU7B,UAC5B0B,aAAaK,QAAQ,WAAYP,KAAKQ,UAAUF,M,oBAsCpD,WACE,IAAQtB,EAAWtB,KAAKb,MAAhBmC,OACFyB,EAAkB/C,KAAKgC,iBAE7B,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAapC,SAAUI,KAAKR,eAE5B,0CACA,cAAC,EAAD,CAAQF,MAAOgC,EAAQb,SAAUT,KAAK+B,eACtC,cAAC,EAAD,CACEjB,SAAUiC,EACVhC,cAAef,KAAKe,uB,GAnEZJ,aA0EHU,I,MChFf2B,IAASvB,OAAOwB,KAAK,CACnBrE,UAAW,kBACXsE,MAAO,QACPC,gBAAiB,UACjBC,aAAc,OACdC,aAAa,EACbC,iBAAkB,kBAClBC,WAAY,YACZC,QAAS,OACTC,WAAW,EACXC,cAAe,OACfC,gBAAiB,OACjBC,eAAgB,OAChBC,cAAc,EACdC,qBAAsB,IACtBC,kBAAmB,OAEnBrC,QAAS,CACPsC,SAAU,UACVC,WAAY,UACZC,aAAc,UACdC,iBAAkB,UAClBC,YAAa,OACbd,iBAAkB,qB,MCjBtBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCX1BjG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.ebc7f733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Filter_field__2oaEV\",\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1007G\",\"form\":\"ContactForm_form__1NiH1\",\"field\":\"ContactForm_field__MnLFK\",\"label\":\"ContactForm_label__3KgVy\",\"input\":\"ContactForm_input__3emgF\"};","import s from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport { Container };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState !== this.state;\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.field}>\n          <span className={s.label}>Name</span>\n          <input\n            className={s.input}\n            type='text'\n            name='name'\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label className={s.field}>\n          <span className={s.label}>Number</span>\n          <input\n            className={s.input}\n            type='tel'\n            name='number'\n            value={number}\n            pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n            title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.button} type='submit'>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport { ContactForm };\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.field}>\n    <span className={s.label}>Find contacts by name</span>\n    <input\n      className={s.input}\n      type='text'\n      name='filter'\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.scss';\n\nclass ContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n    ).isRequired,\n    deleteContact: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { contacts, deleteContact } = this.props;\n\n    return (\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <p className={s.name}>{name}</p>\n            <p className={s.number}>{number}</p>\n\n            <button\n              className={s.button}\n              type='button'\n              onClick={() => deleteContact(id)}\n            >\n              x\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport { ContactList };\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Report } from 'notiflix';\nimport { Container } from './components/Container';\nimport { ContactForm } from './components/ContactForm';\nimport { Filter } from './components/Filter';\nimport { ContactList } from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const storedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    storedContacts && this.setState({ contacts: storedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentContacts = this.state.contacts;\n\n    currentContacts !== prevState.contacts &&\n      localStorage.setItem('contacts', JSON.stringify(currentContacts));\n  }\n\n  handleSubmit = newContact => {\n    this.state.contacts.find(({ name }) => name === newContact.name)\n      ? Report.warning(\n          `Can't add this contact!`,\n          `${newContact.name} is already in contacts.`,\n          'OK',\n        )\n      : this.addContact(newContact);\n  };\n\n  addContact = ({ name, number }) => {\n    this.setState(({ contacts }) => ({\n      contacts: [{ id: nanoid(8), name, number }, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = ({ target: { value } }) => {\n    this.setState({ filter: value });\n  };\n\n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.filterContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          deleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import Notiflix from 'notiflix';\n\nNotiflix.Report.init({\n  className: 'notiflix-report',\n  width: '320px',\n  backgroundColor: '#f8f8f8',\n  borderRadius: '10px',\n  backOverlay: true,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  fontFamily: 'Quicksand',\n  svgSize: '80px',\n  plainText: true,\n  titleFontSize: '18px',\n  messageFontSize: '16px',\n  buttonFontSize: '14px',\n  cssAnimation: true,\n  cssAnimationDuration: 300,\n  cssAnimationStyle: 'fade',\n\n  warning: {\n    svgColor: '#eebf31',\n    titleColor: '#1e1e1e',\n    messageColor: '#242424',\n    buttonBackground: '#eebf31',\n    buttonColor: '#fff',\n    backOverlayColor: 'rgba(0,0,0,0.5)',\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport 'notiflix/dist/notiflix-aio-3.1.0.min.js';\nimport './components/Notiflix/notiflix-options';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"button\":\"ContactList_button__197mh\",\"item\":\"ContactList_item__3lf8n\",\"name\":\"ContactList_name__1ikjf\",\"number\":\"ContactList_number__36A13\"};"],"sourceRoot":""}